{"version":3,"file":"app/og/[code]/route.js","mappings":"oFAAAA,CAAAA,EAAAC,OAAA,CAAAC,QAAA,0CCAAF,CAAAA,EAAAC,OAAA,CAAAC,QAAA,gXCEO,IAAMC,EAAU,OAEhB,eAAeC,EAAIC,CAAU,CAAE,CAAEC,OAAAA,CAAM,CAAgC,EAC5E,OAAO,IAAIC,EAAAA,CAAaA,CAEpB,GAAAC,EAAAC,IAAA,EAACC,MAAAA,CAAIC,MAAO,CACVC,OAAQ,OACRC,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,WAAY,QACZC,SAAU,EACZ,YAAG,gBACUZ,EAAOa,IAAI,IAG1B,CAAEN,MAAO,KAAMD,OAAQ,GAAI,EAE/B,CCdA,IAAAQ,EAAA,IAAwBC,EAAAC,mBAAmB,EAC3CC,WAAA,CACAC,KAAcC,EAAAC,CAAS,CAAAC,SAAA,CACvBC,KAAA,mBACAC,SAAA,aACAC,SAAA,QACAC,WAAA,qBACA,EACAC,iBAAA,uEACAC,iBAVA,GAWAC,SAAYC,CACZ,GAIA,CAAQC,oBAAAA,CAAA,CAAAC,6BAAAA,CAAA,CAAAC,YAAAA,CAAA,EAAiElB,EACzEmB,EAAA,mBACA,SAAAC,IACA,MAAW,GAAAC,EAAAC,EAAA,EAAW,CACtBJ,YAAAA,EACAD,6BAAAA,CACA,EACA,CC1BO,IAAAM,EAAqBC,EAC5BC,EAAeC,EAAAC,CAAsB,CAAAC,IAAA,CAAM5B","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./app/og/[code]/route.tsx","webpack://_N_E/./app/og/[code]/route.tsx?746f","webpack://_N_E/?f1e7"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { ImageResponse } from 'next/og'\r\n\r\nexport const runtime = 'edge'\r\n\r\nexport async function GET(_: Request, { params }: { params: { code: string } }) {\r\n  return new ImageResponse(\r\n    (\r\n      <div style={{\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        background: 'white',\r\n        fontSize: 48,\r\n      }}>\r\n        Blooomy Â· {params.code}\r\n      </div>\r\n    ),\r\n    { width: 1200, height: 630 }\r\n  )\r\n}\r\n\r\n\r\n","import { AppRouteRouteModule } from \"next/dist/server/future/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"C:\\\\Users\\\\mertk\\\\Desktop\\\\BLOOMY\\\\figma\\\\app\\\\og\\\\[code]\\\\route.tsx\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/og/[code]/route\",\n        pathname: \"/og/[code]\",\n        filename: \"route\",\n        bundlePath: \"app/og/[code]/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\mertk\\\\Desktop\\\\BLOOMY\\\\figma\\\\app\\\\og\\\\[code]\\\\route.tsx\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/og/[code]/route\";\nfunction patchFetch() {\n    return _patchFetch({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\nexport { routeModule, requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, originalPathname, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","import { EdgeRouteModuleWrapper } from \"next/dist/server/web/edge-route-module-wrapper\";\n// Import the userland code.\nimport * as module from \"next-app-loader?name=app%2Fog%2F%5Bcode%5D%2Froute&page=%2Fog%2F%5Bcode%5D%2Froute&pagePath=private-next-app-dir%2Fog%2F%5Bcode%5D%2Froute.tsx&appDir=C%3A%5CUsers%5Cmertk%5CDesktop%5CBLOOMY%5Cfigma%5Capp&appPaths=%2Fog%2F%5Bcode%5D%2Froute&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!private-next-app-dir/og/[code]/route.tsx?__next_edge_ssr_entry__\";\nexport const ComponentMod = module;\nexport default EdgeRouteModuleWrapper.wrap(module.routeModule);\n\n//# sourceMappingURL=edge-app-route.js.map"],"names":["module","exports","require","runtime","GET","_","params","ImageResponse","jsx_runtime","jsxs","div","style","height","width","display","alignItems","justifyContent","background","fontSize","code","routeModule","module_compiled","AppRouteRouteModule","definition","kind","route_kind","x","APP_ROUTE","page","pathname","filename","bundlePath","resolvedPagePath","nextConfigOutput","userland","route_namespaceObject","requestAsyncStorage","staticGenerationAsyncStorage","serverHooks","originalPathname","patchFetch","patch_fetch","XH","ComponentMod","route_next_edge_ssr_entry_namespaceObject","next_edge_app_route_loaderabsolutePagePath_private_next_app_dir_2Fog_2F_5Bcode_5D_2Froute_tsx_page_2Fog_2F_5Bcode_5D_2Froute_appDirLoader_bmV4dC1hcHAtbG9hZGVyP25hbWU9YXBwJTJGb2clMkYlNUJjb2RlJTVEJTJGcm91dGUmcGFnZT0lMkZvZyUyRiU1QmNvZGUlNUQlMkZyb3V0ZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRm9nJTJGJTVCY29kZSU1RCUyRnJvdXRlLnRzeCZhcHBEaXI9QyUzQSU1Q1VzZXJzJTVDbWVydGslNUNEZXNrdG9wJTVDQkxPT01ZJTVDZmlnbWElNUNhcHAmYXBwUGF0aHM9JTJGb2clMkYlNUJjb2RlJTVEJTJGcm91dGUmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0Qh_nextConfigOutput_preferredRegion_middlewareConfig_e30_3D_","edge_route_module_wrapper","a","wrap"],"sourceRoot":""}